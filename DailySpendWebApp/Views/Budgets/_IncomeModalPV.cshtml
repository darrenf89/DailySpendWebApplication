@model DailySpendBudgetWebApp.Models.CreateABudgetPageModel

@{
    string? GoalString = "";
    string? CurrentBalanceString = "";
    int? IncomeValue = 0;
    string? IncomeDuration = "";
    if (Model.Stage.Contains("EditIncome"))
    {
        GoalString = String.Format("{0:c}", Model.IncomeAmount);
        IncomeValue = Model.RecurringIncomeValue ?? 1;
        IncomeDuration = Model.RecurringIncomeDuration;
    }
}

<div id="divMainIncomeContent" class="container">
    <div class="card text-white bg-white mb-3 shadow rounded-5 ms-3 me-3 border-dark" id="divIncomeTypeSelector" style="display: block;">
        <div class="container mt-1 mb-1">
            <div class="d-flex flex-column align-items-center">
                <div class="input-container col-7 mb-0">
                    <input style="font-size: 20px; cursor: pointer;" placeholder="Name" onfocus="this.placeholder = ''" onblur="this.placeholder = 'Name'" asp-for="IncomeName" type="text" required />
                </div>
                <div>
                    <span class="text-danger text-center" style="font: normal 10px Arial;" class="text-danger" asp-validation-for="IncomeName"></span>
                </div>
                <div id="divRecurringTypeSelected" style="display: none;" class="text-dark p-2 text-center">
                    <h5 class="mb-0" id="txtRecurringTypeSelected"></h5>
                </div>
                <div id="divCategoryExp" class="text-muted text-center p-1" Style="font-size: 12px; display: none;"></div>
            </div>
        </div>
        <div id="divIsReccuringIncome">
            <div>
                <h5 class="text-dark p-2 text-center">One-off or a Recurring Income?</h5>
                <p class="text-muted text-center pb-3 ps-2 pe-2 m-0" style="font-size: 8pt;">Set up a Recurring Income, maybe pay from a second job or money from investments? Or add a one-off Income you know is coming, a gift or selling something big?</p>
            </div>
            <div class="container d-flex flex-column mb-1 ps-3 pe-3" id="divIsRecurringBill">
                <div class="d-flex justify-content-between align-items-center text-center ms-3 me-3">
                    <div id="divRecurringBillYes" class="col-5 m-2">
                        <button id="btnYes" type="button" class="btn btn-primary rounded-3 col-12" onclick="isRecurringIncomeSelection('Yes'); return false;">Recurring</button>
                    </div>
                    <div id="divRecurringBillYes" class="col-5 m-2">
                        <button id="btnNo" type="button" class="btn btn-dark rounded-3 col-12" onclick="isRecurringIncomeSelection('No'); return false;">One-off</button>
                    </div>
                    <input type="hidden" asp-for="isRecurringIncome" />
                </div>
            </div>
        </div>
    </div>
    <div class="card text-white bg-white mb-3 shadow rounded-5 ms-3 me-3 border-dark" id="IncomeDetails" style="display: none;">
        <div id="divSpacerTop2" class="mt-4"></div>
        <div id="divBillTarget" class="row justify-content-between align-items-center ms-2 me-2 mt-0">
            <label class="form-label col-5 ps-2 pe-1 m-0 text-dark" asp-for="IncomeAmount">Income Amount</label>
            <input id="txtIncomeAmount" type="text" pattern="^\d*(\.\d{0,2})?£" value="" style="cursor: pointer; border-left: 1px solid #772953; width: 42%;" data-type="currency" placeholder="£0.00" class="pe-2 pt-2 pb-2" onfocus="this.placeholder = ''; this.value = '';" onblur="this.placeholder = '£0.00'" onchange="UpdateHdnIncomeAmount();" />
            <input asp-for="IncomeAmount" type="hidden" />
            <span class="text-danger" asp-validation-for="IncomeAmount"></span>
        </div>
        <div id="divGoalDate" class="row justify-content-between align-items-center ms-2 me-2 mt-2">
            <label class="form-label col-5 ps-2 pt-2 pe-1 pb-2 m-0 text-dark" asp-for="DateOfIncomeEvent">Date of Income</label>
            <input asp-for="DateOfIncomeEvent" type="date" onblur="CheckDateFutureIncomes(), false;" class="pe-2 pt-2 pb-2" style="width: 42%; text-align: right; border: none; outline: none; color: #772953; cursor: pointer; border-left: 1px solid #772953;" oninput="this.style.color = '#e95420'" />
            <span class="text-danger" asp-validation-for="DateOfIncomeEvent" id="valGoalDate"></span>
        </div>
        <div id="divRecurringIncome">
            <div id="divSpacerTop" class="mt-2"></div>
            <fieldset class="form-group">
                <div style="font-size: 10pt;" class="ms-5 me-4 justify-content-between" id="IncomeRadioButtons">
                    <div class="form-check col-10 p-0">
                        <input class="form-check-input" type="radio" name="IncomeoptionsRadios" id="IncomeoptionsRadios1" value="Everynth" />
                        <label class="form-check-label align-self-center text-dark" for="IncomeoptionsRadios1" id="lblIncomeoptionsRadios1">
                            Every nth ...
                        </label>
                    </div>
                    <div class="form-check col-10 p-0">
                        <input class="form-check-input align-self-center" type="radio" name="IncomeoptionsRadios" id="IncomeoptionsRadios2" value="OfEveryMonth" />
                        <label class="form-check-label align-self-center text-dark" for="IncomeoptionsRadios2" id="lblIncomeoptionsRadios2">
                            on the ... of every month
                        </label>
                    </div>
                </div>
            </fieldset>
            <div class="ps-4">
                <input type="hidden" asp-for="RecurringIncomeType" />
                <span asp-validation-for="RecurringIncomeType" style="font-size:8pt" class="text-danger text-center"></span>
            </div>
            <div class="pe-3 d-flex" id="divRecurringTypesSelector">
                <div id="divIncomePeriodicPay" style="display: none;" class="mt-3 mb-1 ps-2 col-12 justify-content-end align-items-center">
                    <div class="text-center me-1" style="display: flex">
                        <span class="text-dark form-label mb-0">Every</span>
                    </div>
                    <div class="text-center me-1" style="display: flex">
                        <input style="max-width: 50px" class="form-control text-primary text-center" type="Number" id="IncomePeriodicPay" />
                    </div>
                    <div class="" style="display: flex">
                        <div class="DropDown">
                            <select class="form-select text-primary text-center" asp-for="RecurringIncomeDuration" value="'@IncomeDuration'">
                                <option>days</option>
                                <option>weeks</option>
                                <option>months</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div id="divIncomeGivenDayOfMonthPay" style="display: none;" class="mt-3 mb-1 ps-2 col-12 justify-content-end align-items-center">
                    <div class="text-center me-1">
                        <span class="text-dark form-label mb-0">On the </span>
                    </div>
                    <div class="text-center me-1">
                        <input style="max-width: 50px" class="form-control text-primary text-center" type="Number" id="IncomeGivenDayOfMonthPay" />
                    </div>
                    <div class="text-center">
                        <span class="text-dark form-label mb-0"> of every month</span>
                    </div>
                </div>
            </div>
        </div>
        <input type="hidden" asp-for="RecurringIncomeValue" />
        <div id="divSpacerTop2" class="mt-4"></div>
    </div>
    <div class="card text-white bg-white mb-3 shadow rounded-5 ms-3 me-3 border-dark" id="isIncomeInstantActive" style="display: none;">
        <div id="isInstantActiveQuestions">
            <div>
                <h5 class="text-dark ps-2 pe-2 m-0 mt-2 text-center">Income Instant Active?</h5>
                <p class="text-muted text-center pb-1 ps-2 pe-2 m-0" style="font-size: 8pt;">Do you want the income to be added to your allowed spending instantly rather than when it is due?</p>
                <p class="text-danger text-center pb-1 ps-2 pe-2 m-0" style="font-size: 10pt;">* <strong>Caution</strong> though you might end up spending more money than you have</p>
            </div>
            <div class="container d-flex flex-column mb-1 ps-3 pe-3" id="divIsInstantActive">
                <div class="d-flex justify-content-between align-items-center text-center ms-3 me-3">
                    <div id="divisInstantActiveBillYes" class="col-5 m-2">
                        <button id="btnYesActive" type="button" class="btn btn-primary rounded-3 col-12" onclick="isInstantActiveIncomeSelection('Yes'); return false;">Yes</button>
                    </div>
                    <div id="divisInstantActiveBillYes" class="col-5 m-2">
                        <button id="btnNoActive" type="button" class="btn btn-dark rounded-3 col-12" onclick="isInstantActiveIncomeSelection('No'); return false;">No</button>
                    </div>
                    <input type="hidden" asp-for="isInstantActive" value="" />
                </div>
            </div>
        </div>
        <div id="isInstantActiveAnswer" style="display: none;">
            <p class="text-muted pb-1 ps-4 pe-4 m-2 pt-1" style="font-size: 8pt;" id="isInstantActiveAnswertxt"></p>
        </div>
    </div>
</div>
<script>
    var IncomeModalStage = [];

    document.addEventListener("load", CheckIncomeStage());

    function CheckIncomeStage() 
    {
        IncomeModalStage = [];
    @foreach (string item in Model.Stage)
    {
        @:IncomeModalStage.push('@item');
    }

        if (IncomeModalStage.includes('EditIncome')) 
        {
            document.getElementById('txtIncomeAmount').value = '@Html.Raw(GoalString)'
            document.getElementById('IncomeName').readOnly = true;
            if ('@Model.isRecurringIncome' == 'True') 
            {
                isRecurringIncomeSelection('Yes');

                if ('@Model.RecurringIncomeType' == 'Everynth') 
                {
                    document.getElementById('IncomeoptionsRadios1').checked = true
                    document.getElementById('IncomeoptionsRadios2').checked = false
                    document.getElementById('divIncomePeriodicPay').style.display = 'flex';
                    document.getElementById('divIncomeGivenDayOfMonthPay').style.display = 'none';
                    document.getElementById('lblIncomeoptionsRadios1').className = "form-check-label align-self-center text-primary"
                    document.getElementById('lblIncomeoptionsRadios2').className = "form-check-label align-self-center text-secondary"
                    document.getElementById('RecurringIncomeType').value = "Everynth"
                    document.getElementById('IncomePeriodicPay').value = '@IncomeValue'
                }
                else if ('@Model.RecurringIncomeType' == 'OfEveryMonth') 
                {
                    document.getElementById('IncomeoptionsRadios1').checked = false
                    document.getElementById('IncomeoptionsRadios2').checked = true
                    document.getElementById('divIncomePeriodicPay').style.display = 'none';
                    document.getElementById('divIncomeGivenDayOfMonthPay').style.display = 'flex';
                    document.getElementById('lblIncomeoptionsRadios1').className = "form-check-label align-self-center text-secondary"
                    document.getElementById('lblIncomeoptionsRadios2').className = "form-check-label align-self-center text-primary"
                    document.getElementById('RecurringIncomeType').value = "OfEveryMonth"
                    document.getElementById('IncomeGivenDayOfMonthPay').value = '@IncomeValue'
                }
            }
            else 
            {
                isRecurringIncomeSelection('No');
            }

            if('@Model.isInstantActive' == 'True')
            {
                isInstantActiveIncomeSelection('Yes')
            }
            else if ('@Model.isInstantActive' == 'False')
            {
                isInstantActiveIncomeSelection('No')
            }
        }
    }

    function CheckDateFutureIncomes() {
        var CurrentDateString = (document.getElementById('hdnServerDate').value);
        var CurrentDateStringSplit = CurrentDateString.split(' ');
        var DateCurrentDate = new Date(CurrentDateStringSplit[0].split('/')[2], CurrentDateStringSplit[0].split('/')[1] - 1, CurrentDateStringSplit[0].split('/')[0]);
        var CurrentDate = DateCurrentDate.getTime();
        var TargetDate = Date.parse(document.getElementById('DateOfIncomeEvent').value);

        console.log(CurrentDateString)
        console.log(CurrentDateStringSplit)
        console.log(DateCurrentDate)
        console.log(TargetDate)
        console.log(CurrentDate)

        var DateTargetDate = new Date(TargetDate)
        var year = DateTargetDate.getFullYear()

        if (!(year <= 9)) {
            if (CurrentDate > TargetDate) {
                document.getElementById('valGoalDate').innerHTML = '<span id="GoalDate-error" style="font-size:8pt" class> * The Date must be in the future</span>'
            }
            else {
                document.getElementById('valGoalDate').innerHTML = ''
            }
        }
    }

    $("#IncomeGivenDayOfMonthPay").on({
        change: function () {
            $('#RecurringIncomeValue').val(this.value)
        }
    });

    $("#IncomePeriodicPay").on({
        change: function () {
            $('#RecurringIncomeValue').val(this.value)
        }
    });

    document.querySelectorAll('input[name="IncomeoptionsRadios"]').forEach(radio => {
        radio.addEventListener('click', handleIncomeRadioClick);
    });



    function handleIncomeRadioClick() {
        if (document.getElementById('IncomeoptionsRadios1').checked) {
            document.getElementById('divIncomePeriodicPay').style.display = 'flex';
            document.getElementById('divIncomeGivenDayOfMonthPay').style.display = 'none';
            document.getElementById('lblIncomeoptionsRadios1').className = "form-check-label align-self-center text-primary"
            document.getElementById('lblIncomeoptionsRadios2').className = "form-check-label align-self-center text-dark"
            document.getElementById('RecurringIncomeType').value = "Everynth"

        }
        else if (document.getElementById('IncomeoptionsRadios2').checked) {
            document.getElementById('divIncomePeriodicPay').style.display = 'none';
            document.getElementById('divIncomeGivenDayOfMonthPay').style.display = 'flex';
            document.getElementById('lblIncomeoptionsRadios1').className = "form-check-label align-self-center text-dark"
            document.getElementById('lblIncomeoptionsRadios2').className = "form-check-label align-self-center text-primary"
            document.getElementById('RecurringIncomeType').value = "OfEveryMonth"
        }
    }

    function UpdateHdnIncomeAmount() {
        var txtBillAmount = document.getElementById('txtIncomeAmount').value;
        var numBillAmount = txtBillAmount.replace('£', '').replace(',', '');
        document.getElementById('IncomeAmount').value = numBillAmount;
    }    

    function isRecurringIncomeSelection(isRegular) {
        document.getElementById("divIsReccuringIncome").style.display = "none";
        document.getElementById("divRecurringTypeSelected").style.display = "block";
        document.getElementById("IncomeDetails").style.display = "block";
        document.getElementById("isIncomeInstantActive").style.display = "block";
        if (isRegular == 'Yes') {
            document.getElementById('isRecurringIncome').value = 'true';
            document.getElementById("txtRecurringTypeSelected").innerHTML = "You are adding a recurring Income";
            document.getElementById("divRecurringIncome").style.display = "block";
            document.getElementById("divCategoryExp").style.display = "block";
            document.getElementById('divCategoryExp').innerHTML = '<p style="font-size: 10px" class="pb-1 ps-2 pe-2 m-0">Any Income outside of your main pay you get on a regular and consitent way!</p><p style="font-size: 10px" class="pb-1 ps-2 pe-2 m-0">Maybe a second part time job, some cash from investments or maybe you have really generous friends?!</p>'

        }
        else if (isRegular == 'No') {
            document.getElementById('isRecurringIncome').value = 'false';
            document.getElementById("txtRecurringTypeSelected").innerHTML = "You are adding a one off Income";
            document.getElementById("divRecurringIncome").style.display = "none";
            document.getElementById("divCategoryExp").style.display = "block";
            document.getElementById('divCategoryExp').innerHTML = '<p style="font-size: 10px" class="pb-1 ps-2 pe-2 m-0">Any Income you know you are going to get but will only recieve it this once.</p><p style="font-size: 10px" class="pb-1 ps-2 pe-2 m-0">Maybe a gift from family, sold something big ... or small any extra money you get put it in here.</p>'
        }
    }

    function isInstantActiveIncomeSelection(isIsntantActive) {
        if (isIsntantActive == 'Yes') {
            document.getElementById("isInstantActiveQuestions").style.display = "none";
            document.getElementById("isInstantActiveAnswer").style.display = "block";
            document.getElementById("isInstantActiveAnswertxt").innerHTML = "The Income will be availble from today and used to calculate your daily spend, careful you dont spend more money than you have!";
            document.getElementById("isInstantActive").value = "true";
        }
        else if (isIsntantActive == 'No') {
            document.getElementById("isInstantActiveQuestions").style.display = "none";
            document.getElementById("isInstantActiveAnswer").style.display = "block";
            document.getElementById("isInstantActiveAnswertxt").innerHTML = "The Income will become availble for spend and used in calculation on the day you have told us it will be recieved!";
            document.getElementById("isInstantActive").value = "false";
        }
    }

</script>