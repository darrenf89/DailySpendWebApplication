@model UserHomePageModel;


@{
    ViewData["Title"] = "User Dashboard";  
    var id = ViewContext.RouteData.Values["id"];
    var ReMess = ViewContext.RouteData.Values["ReMess"];
}
<form method="post">
    <div class="">
        <div class="mt-1 mb-4 mx-4 p-3 border border-dark border-1 bg-white rounded-4 shadow">
            <div id="BudgetStatus" >
            </div>
        </div>
        <div class="mb-4">
            <div class="bg-primary rounded-3 shadow mb-3" style="width: 50%">
                <h1 class="text-white display-6 p-1 ps-2">Recent Activity</h1>
            </div>        
            <div class="border border-1 border-primary shadow">
                <div id="RecentActivityTabs" class="d-flex border-bottom border-primary border-3 w-100">
                    <button type="button" class="col-3 p-2 text-white" id="RecentActivityBills" style="background-color: #f39b7e; border: none;" onclick="UpdateRecentActivity('Bills')">Bills</button>
                    <button type="button" class="col-3 p-2 bg-primary text-white" id="RecentActivityTransactions" style="background-color: #f39b7e; border: none;" onclick="UpdateRecentActivity('Transactions')">Transactions</button>
                    <button type="button" class="col-3 p-2 text-white" id="RecentActivitySavings" style="background-color: #f39b7e; border: none;" onclick="UpdateRecentActivity('Savings')">Savings</button>
                    <button type="button" class="col-3 p-2 text-white" id="RecentActivityIncomes" style="background-color: #f39b7e; border: none;" onclick="UpdateRecentActivity('Incomes')"> Income</button>
                </div>
                <div id="RecentActivity" style="height: 300px; overflow: scroll; background-color: #f39b7e">

                </div>
            </div>
        </div>
        <div>
            <div class="bg-success rounded-3 shadow mb-3" style="width: 50%">
                <h1 class="text-white display-6 p-1 ps-2">Next Pay Info</h1>
            </div>
            <div id="NextPayInfo">

            </div>
        </div>
        <div id="BudgetInfo" class="my-5">
            <div class="card text-white bg-white mb-3 shadow">
                <div class="card-header p-2 d-flex justify-content-between border-bottom border-primary" style="background-color: #FFCC98;">
                    <h8 class="col-6 text-dark">Budget Info</h8>
                    <div class="d-flex justify-content-end col-4 align-items-center">
                        <a style="text-decoration: none" asp-controller="Budgets" asp-action="EnterBudgetDetails"><p class="text-dark d-flex align-items-center m-0" style="font-size: 12px;"> NEW</p></a>
                    </div>
                </div>
                <div class="card-body">
                    <div id="MoneyInfo"></div>
                    <div id="nextIncomeEventInfo"></div>
                </div>
                <div class="bg-light text-dark d-flex align-items-center justify-content-start border-top border-grey">
                    <p class="m-0 pt-1 ps-2" style="font-size: 12px"><a asp-action="EnterBudgetDetails" asp-controller="Budgets">Edit Budget Settings</a></p>
                </div>
            </div>
        </div>
    </div>
    <div class="alert alert-dismissible p-2 alert-danger" id="snackbar">
        <div class="d-flex">
            <div id="SnackBarMessage" class="col-11 pe-1"></div>
            <button type="button" class="btn-close p-3" data-bs-dismiss="alert"></button>       
        </div>
    </div>
    <input type="hidden" id="CurrencySymbol" value="@Html.Raw(ViewBag.CurrencySymbol)" />
    <input type="hidden" id="CurrencySpacer" value="@Html.Raw(ViewBag.CurrencySpacer)" />
    <input type="hidden" id="DecimalSeperator" value="@Html.Raw(ViewBag.DecimalSeperator)" />
    <input type="hidden" id="CurrencyPlacement" value="@Html.Raw(ViewBag.CurrencyPlacement)" />
    <input type="hidden" id="SymbolSpace" value="@Html.Raw(ViewBag.SymbolSpace)" />
</form>
<div id="myPartialViewDiv">
</div>

<script>


    function OpenModal() {
        document.getElementById('DatePickerContainter').style.display = 'block';
    }



    function FinishEditPay()
    {
        UpdateHdnTransactionAmount()

        var PayAmountTxt = $('#PayAmount').val()

        $.ajax({
            url: '/Home/UpdatePayValue/',
            type: 'POST',
            data:
            {
                PayAmount: PayAmountTxt
            },

            success: function (result) 
            {
                $("#NextPayInfo").html('');
                $("#NextPayInfo").html(result);
            },

            error: function (xhr, exception) 
            {
                console.log(exception);
                $("#NextPayInfo").html('');
                $('#NextPayInfo').load("/Home/NextPayInfo")
            }
        });
    }

    function UpdateRecentActivity(Type)
    {        
        $('#RecentActivityTransactions').removeClass().addClass('col-3 bg-orange p-2 text-white')
        $('#RecentActivityBills').removeClass().addClass('col-3 bg-orange p-2 text-white')
        $('#RecentActivitySavings').removeClass().addClass('col-3 bg-orange p-2 text-white')
        $('#RecentActivityIncomes').removeClass().addClass('col-3 bg-orange p-2 text-white')

        var ActiveRecent = '#RecentActivity' + Type
        $(ActiveRecent).removeClass().addClass('col-3 bg-primary p-2 text-white')

        $('#RecentActivity').html('')

        if (Type == 'Transactions')
        {
            $('#RecentActivity').load("/Home/RecentActivityTransactions")
        }
        else if (Type == 'Savings')
        {
            $('#RecentActivity').load("/Home/RecentActivitySavings")
        }
        else if (Type == 'Bills') 
        {
            $('#RecentActivity').load("/Home/RecentActivityBills")
        }
        else if (Type == 'Incomes') 
        {
            $('#RecentActivity').load("/Home/RecentActivityIncomes")
        }
    }

    function OpenModal(){
        document.getElementById('DatePickerContainter').style.display = 'block';
    }

    document.addEventListener("load", CheckReMessage('@ReMess'));

    function CheckReMessage(ReMess){
        if (ReMess == '')
        {

        }
        else
        {
            ShowSnackBar(ReMess, 'success')
        }

    }

    function ShowSnackBar(Message, Type) {

        var x = document.getElementById("SnackBarMessage");

        if (Message == 'BillCreated') {
            x.innerHTML = "<div><strong>Congrats</strong> you set up <strong>" + '@TempData["BillName"]' + "</strong> as a Bill for <strong>£" + '@TempData["BillAmount"]' + "</strong> which will require you to save <strong>£" + '@TempData["BillDailyValue"]' + "</strong> a day!</div>"
        }
        else if (Message == 'SavingCreated') {
            x.innerHTML = "<div><strong>Congrats</strong> you set up <strong>" + '@TempData["SavingsName"]' + "</strong> as a Saving for <strong>£" + '@TempData["SavingsGoal"]' + "</strong> which will required you to save <strong>£" + '@TempData["RegularSavingValue"]' + "</strong> a day!</div>";
        }
        else if (Message == 'SavingCancelled') {
            x.innerHTML = '<div>Youve back out of creating the <strong>Saving</strong>, Whats wrong you scared? Dont worry we believe in you!</div>'
        }
        else if (Message == 'BillCancelled') {
            x.innerHTML = '<div>You <strong>Deleted</strong> your Bill, This doesnt delete it from life though just in the app it still needs to be paid, so maybe just add it anyway?</div>';
        }
        else if (Message == 'EnvolopeSavingCreated') {
            x.innerHTML = "<div><strong>Congrats</strong> you set up <strong>" + '@TempData["SavingsName"]' + "</strong> as an Envolope Saving for <strong>£" + '@TempData["PeriodSavingValue"]' + ".</strong> We will allocate this amount at the start of every pay day to spend during the month.</div>";
        }
        else if (Message == 'TransactionCreated') {
            x.innerHTML = "<div><strong>Congrats</strong> you created a transaction for <strong>" + '@TempData["TransactionAmount"]' + "</strong>";
        }

        var y = document.getElementById("snackbar");
        y.className = y.className.replace("alert-success", "");
        y.className = y.className.replace("alert-danger", "");

        if (Type == 'success') {
            y.className = y.className + ' alert-success';
        }
        else if (Type == 'danger') {
            y.className = y.className + ' alert-danger';
        }

        y.className = y.className + " show";

        setTimeout(function () { y.className = y.className.replace("show", ""); }, 6900);
    }
    
</script>

@section Scripts{
    <script>
        $('#BudgetStatus').load("/Home/AddBudgetStatus")
        $('#RecentActivity').load("/Home/RecentActivityTransactions")
        $('#NextPayInfo').load("/Home/NextPayInfo")
    </script>
}
